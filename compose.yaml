services:
  database:
    image: postgres:13
    environment:
      POSTGRES_PASSWORD: ff
      POSTGRES_USER: postgres
      POSTGRES_DB: ff
    volumes:
      - ./db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 5s
      retries: 5

  pipelines:
    build:
      context: ./pipelines/
      dockerfile: Dockerfile
#    env_file:
#      - .env.local
    environment:
      - PIPELINE_TO_RUN=run_ml_pipeline.py
      - SEASON=2023
      - WEEK=1
    volumes:
      - ./pipelines:/api/pipelines
      - ./shared/:/api/shared
    depends_on:
      database:
        condition: service_healthy

#  mlflow:
#    image: mlflow
#    build:
#      dockerfile: ./mlflow/Dockerfile
#    ports:
#      - "5001:5001"

  api:
    build:
      context: ./api/
      tags:
        - numbersff-api
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_CONN_STRING=postgresql+asyncpg://postgres:ff@database:5432/ff
    depends_on:
      database:
        condition: service_healthy